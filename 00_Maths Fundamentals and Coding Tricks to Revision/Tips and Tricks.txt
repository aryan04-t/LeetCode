* To find whether a number is odd or even, use bitwise AND (&), try to stay away from modulus it is a heavy operation 

@ Example Code: 

if(num & 1){
    cout << "Number is Odd" << endl;
}
else{
    cout << "Number is Even" << endl;
}


// - - - - - - - - - - 


* Always remember "new" keyword returns a "pointer". 
* Always delete the dynamically allocated memory using the "delete" keyword. 

$ Use "delete" for freeing memory a dynamically allocated variable or object's memory, and use "delete[]" for freeing a dynamically allocated "array's" memory. 


// - - - - - - - - - - 


* Never forget to check that a "pointer" should not be pointing to null before checking its next or prev in a "Linked List". 


// - - - - - - - - - - 


* Never forget to check that: 
--> A "Vector" should not be empty before calling its "back()" member function. 
--> A "Stack" should not be empty before calling its "top()" member function. 
--> A "Queue" should not be empty before calling its "front()" member function. 
--> And a "Dequeue" should not be empty before calling its "front()" or "back()" member function. 


// - - - - - - - - - - 


@ Prerequisite for applying binary search is that the data set should be in sorted order. 


